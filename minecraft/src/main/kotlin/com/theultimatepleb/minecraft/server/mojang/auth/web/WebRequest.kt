package com.theultimatepleb.minecraft.server.mojang.auth.web

import com.github.kittinunf.fuel.httpGet
import com.google.gson.Gson
import com.google.gson.JsonParser
import com.theultimatepleb.minecraft.server.mojang.auth.GameProfile

/**
 * Created by Sebastian Agius on 12/09/2017.
 */
class WebRequest {

    companion object {
        val SESSION_API_ENDPOINT = "https://sessionserver.mojang.com/session/minecraft/"

        /**
         * Verifies that a player has joined the server via online mode
         *
         * @param username the name sent in[com.theultimatepleb.minecraft.server.protocol.packet.login.serverbound.PacketLoginStart]
         * @param serverId the server hash, generated by[com.theultimatepleb.minecraft.server.network.encryption.EncryptionManager.getServerIdHash]
         * @param ip the client's ip address
         *
         * @return null if they are unauthenticated with Mojang or a valid [com.theultimatepleb.minecraft.server.mojang.auth.GameProfile]
         */
        @JvmStatic
        fun verifyJoin(username: String, serverId: String, ip: String): GameProfile? {
            val (_, _, result) = SESSION_API_ENDPOINT.plus("hasJoined")
                    .httpGet(listOf("username" to username, "serverId" to serverId, "ip" to ip))
                    .responseString()
            val (string, error) = result
            if (error != null)
                return null

            val obj = JsonParser().parse(string).asJsonObject
            val id = obj.get("id").asString
            obj.addProperty("id", addDashes(id))

            return Gson().fromJson(obj, GameProfile::class.java)
        }

        private fun addDashes(id: String): String =
                StringBuilder(id).insert(8, '-').insert(13, '-').insert(18, '-').insert(23, '-').toString()

    }

}