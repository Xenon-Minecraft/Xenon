/*
 * MIT License
 *
 * Copyright (c) 2018 Xenon and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.github.xenonminecraft.network.auth

import com.google.gson.annotations.SerializedName
import java.util.*

data class GameProfile(val name: String, @SerializedName("id") val uuid: String? = null, val properties: Array<Property>? = null) {
    data class Property(val name: String, val value:String, val signature:String)

    /**
     * Generated by IntelliJ
     */
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as GameProfile

        if (name != other.name) return false
        if (uuid != other.uuid) return false
        if (!Arrays.equals(properties, other.properties)) return false

        return true
    }

    /**
     * Generated by IntelliJ
     */
    override fun hashCode(): Int {
        var result = name.hashCode()
        result = 31 * result + uuid!!.hashCode()
        result = 31 * result + Arrays.hashCode(properties)
        return result
    }
}